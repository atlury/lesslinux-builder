<llpackages>
	<package 
		name="firefox"
		version="45.4.0esr"
		class="user"
		install="destdir">
		<!-- FIXME: correctly generate distribution.ini -->
		<!--
		
# Partner Distribution Configuration File
# Mozilla Firefox for Computerbild.de

[Global]
id=computerbild
version=1.0
about=Mozilla Firefox for Computerbild.de

[Preferences]
app.distributor="Computerbild"
app.distributor.channel="Smart Pax"
app.partner.computerbild="computerbild"
		
		-->
		<license>GPLv2</license>
		<!-- official branding -->
		<sources>
			<file>                                                                         
				<pkg sha1="3892aa3ecadfd5fc0533f7847cd959baef3be10e">firefox-45.4.0esr.source.tar.xz</pkg>
				<mirror>http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/45.4.0esr/source/</mirror>
			</file>
			<file> 
				<pkg sha1="74eee04d144302699b5f8e51f984d096fa7fc0e1">mozconfig-firefox-33.0-20141115</pkg>
				<mirror>http://distfiles.lesslinux.org/</mirror>
			</file>
			<!-- 
			
fftag=FIREFOX_45_2_0esr_RELEASE
for l in de es-ES pl ru fr it nl pt-PT da lt lv et sk sl sv-SE bg hr nb-NO ro sr tr cs hu fi el ; do 
echo '==> Cloning: '"$l" ; 
hg clone http://hg.mozilla.org/releases/l10n/mozilla-release/${l}/ ; 
( cd $l ; hg checkout $fftag ) ; 
done

			-->
			<file>                                    
				<pkg sha1="7464c651c01e729d9ca75a7c346b3fa61aa882d8">firefox-45.2.0esr.source.de-es-pl-ru.tar.xz</pkg>
				<mirror>http://distfiles.lesslinux.org/</mirror>
			</file>
			<manualcheck date="20160922" interval="45" page="http://releases.mozilla.org/pub/mozilla.org/firefox/releases/" />
			<check>
				<page html="ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/">
					<atext linktext="45.4.3" />
					<atext linktext="45.4.4" />
					<atext linktext="45.4.2" />
					<atext linktext="45.4.1" />
					<atext linktext="45.5." />
					<atext linktext="45.6." />
					<atext linktext="45.7" />
				</page>
			</check>
		</sources>
		<builddeps>
                        <dep>GConf</dep>
                        <dep>Mesa</dep><dep>glu</dep>
                        <dep>ORBit2</dep>
                        <dep>Python</dep>
                        <dep>alsa-lib</dep>
                        <dep>atk</dep>
                        <dep>autoconf</dep>
                        <dep>bash</dep>
                        <dep>binutils</dep>
			<dep>bzip2</dep>
                        <dep>cairo</dep>
                        <dep>coreutils</dep>
                        <dep>dbus-glib</dep>
                        <dep>dbus</dep>
                        <dep>diffutils</dep>
                        <dep>findutils</dep>
                        <dep>fontconfig</dep>
                        <dep>freetype</dep>
                        <dep>gawk</dep>
                        <dep>gcc</dep>
                        <dep>gdk-pixbuf</dep>
                        <dep>glib</dep>
                        <dep>glibc</dep>
                        <dep>gnome-vfs</dep>
                        <dep>grep</dep>
                        <dep>gtk</dep>
                        <dep>imake</dep>
                        <dep>inetutils</dep>
                        <dep>libICE</dep>
                        <dep>libIDL</dep>
                        <dep>libSM</dep>
                        <dep>libX11</dep>
                        <dep>libXau</dep>
                        <dep>libXext</dep>
                        <dep>libXrender</dep>
                        <dep>libXt</dep>
                        <dep>libart_lgpl</dep>
                        <dep>libbonobo</dep>
                        <dep>libbonoboui</dep>
                        <dep>libcanberra</dep>
                        <dep>libgnome-keyring</dep>
                        <dep>libgnome</dep>
                        <dep>libgnomecanvas</dep>
                        <dep>libgnomeui</dep>
                        <dep>libnotify</dep>
                        <dep>libpng12</dep><dep>libpng14</dep><dep>libpng15</dep><dep>libpng16</dep>
                        <dep>libpthread-stubs</dep>
                        <dep>libxcb</dep>
                        <dep>libxml2</dep>
                        <dep>linux_headers</dep>
                        <dep>make</dep>
                        <dep>makedepend</dep>
			<dep>openssl</dep>
                        <dep>pango</dep><dep>pangox-compat</dep>
                        <dep>perl</dep>
                        <dep>pixman</dep>
                        <dep>pkg-config</dep>
                        <dep>popt</dep>
                        <dep>pygobject</dep>
                        <dep>sed</dep>
                        <dep>tar</dep>
                        <dep>unzip</dep>
                        <dep>util-linux-ng</dep>
			<dep>wget</dep>
                        <dep>which</dep>
                        <dep>wireless_tools</dep>
                        <dep>xorg-cf-files</dep>
                        <dep>xproto-base</dep>
                        <dep>yasm</dep>
                        <dep>zip</dep>
                        <dep>zlib</dep>
			<dep>libmng</dep>
			<dep>lcms</dep>
			<dep>nspr</dep>
			<dep>distcc</dep>
			<dep>gst-libav</dep>
			<dep>gst-plugins-bad1</dep>
			<dep>gst-plugins-good1</dep>
			<dep>gst-plugins-ugly1</dep>
			<dep>gstreamer1</dep>
			<dep>startup-notification</dep>
			<dep>sqlite</dep>
			<dep>libevent</dep>
			<dep>libvpx</dep>
			<dep>nspr</dep>
			<dep>nss</dep>
			<dep>icu</dep>
                </builddeps>
		<unpack>
			<![CDATA[ 
			tar xf ${SRCDIR}/firefox-${PKGVERSION}.source.tar.xz
			mv firefox-${PKGVERSION} mozilla-release
			mkdir l10n
			tar -C l10n -xf ${SRCDIR}/firefox-45.2.0esr.source.de-es-pl-ru.tar.xz
			]]>
		</unpack>
		<patch>
		<![CDATA[
			cp ${SRCDIR}/mozconfig-firefox-33.0-20141115 mozilla-release/.mozconfig
		]]>
		</patch>
		<build>
			<![CDATA[
			
			# export PATH=/usr/local/gcc54/bin:$PATH 
			echo $SHELL
			export SHELL=/bin/bash
			echo $SHELL
			export CFLAGS+=" -fno-delete-null-pointer-checks -fno-lifetime-dse -fno-schedule-insns2" &&
			export CXXFLAGS+=" -fno-delete-null-pointer-checks -fno-lifetime-dse -fno-schedule-insns2"
			dir=`pwd `
			sed -i 's%PWD%'${dir}'/%g' mozilla-release/.mozconfig 
			sed -i 's%# ac_add_options --with-l10n%ac_add_options --with-l10n%g' mozilla-release/.mozconfig 
			sed -i 's%# ac_add_options --with-system-png%ac_add_options --with-system-png%g' mozilla-release/.mozconfig 
			sed -i 's%ac_add_options --enable-system-cairo%# ac_add_options --enable-system-cairo%g' mozilla-release/.mozconfig 
			sed -i 's%ac_add_options --with-system-libvpx%# ac_add_options --with-system-libvpx%g' mozilla-release/.mozconfig 
			sed -i 's%ac_add_options --with-system-libevent%# ac_add_options --with-system-libevent%g' mozilla-release/.mozconfig 
			echo 'ac_add_options --disable-gconf' >> mozilla-release/.mozconfig 
			cd mozilla-release
			if [ -n "$DISTCC_POTENTIAL_HOSTS" ] ; then
				jobcount=` expr $DISTCC_HOSTCOUNT '*' 3 `
				[ "$jobcount" -gt 8 ] && jobcount=8 
				sed -i "s%MOZ_MAKE_FLAGS=\"-j4\"%MOZ_MAKE_FLAGS=\"-j${jobcount} CC='distcc gcc' CXX='distcc g++'\"%g" .mozconfig 
				make -f client.mk clean
				make -f client.mk configure 
				make -f client.mk build  
			else
				sed -i "s%MOZ_MAKE_FLAGS=\"-j4\"%MOZ_MAKE_FLAGS=\"-j4 CC=gcc CXX=g++\"%g" .mozconfig 
				make -f client.mk clean
				make -f client.mk configure	
				make -f client.mk build
			fi
			echo '===> Trying to find libxul.so...'
			find ff-build -type f -name libxul.so
			
			ccount=0
			while [ '!' -f ff-build/toolkit/library/libxul.so -a $ccount -lt 2 ] ; do
				echo '===> Linking libxul.so failed, trying again in 5 minutes...'
				sleep 300
				make -f client.mk build
				ccount=` expr $ccount + 1 ` 
			done
			[ -f ff-build/toolkit/library/libxul.so ] || exit 1		
	
			# Now try to build the language packs
			for packlang in de es-ES pl ru fr it nl pt-PT da lt lv et sk sl sv-SE bg hr nb-NO ro sr tr cs hu fi el ; do
				echo '==> Build language pack for '${packlang}
				make -C ff-build/browser/locales langpack-${packlang}
			done
			
			make -C ff-build package
			echo '==> Searching Tarballs'
			find ff-build -name '*.tar.bz2' | sort 
			echo '==> Searching XPIs'
			find ff-build -name '*.xpi' | sort 
			]]>
		</build>
		<test />
		<install>
			<![CDATA[
shortvers=` echo ${PKGVERSION} | sed 's/esr//g' ` 
TARFILE=mozilla-release/ff-build/dist/firefox-${shortvers}.en-US.linux-` uname -m `.tar.bz2
[ -f "$TARFILE" ] || exit 1
			
mkdir -p ${TGTDIR}/opt
mkdir -p ${TGTDIR}/usr/share/mozilla-addons
mkdir -p ${TGTDIR}/usr/share/icons
tar -C ${TGTDIR}/opt -xvjf "${TARFILE}"
mv ${TGTDIR}/opt/firefox ${TGTDIR}/opt/firefox-${PKGVERSION}

# Install language packs
mkdir -p ${TGTDIR}/opt/firefox-${PKGVERSION}-extensions
for packlang in de es-ES pl ru fr it nl pt-PT da lt lv et sk sl sv-SE bg hr nb-NO ro sr tr cs hu fi el ; do
	install -m 0644 mozilla-release/ff-build/dist/linux-` uname -m `/xpi/firefox-${shortvers}.${packlang}.langpack.xpi \
	${TGTDIR}/opt/firefox-${PKGVERSION}-extensions/ 
done

install -m 0644 ${TGTDIR}/opt/firefox-${PKGVERSION}/icons/mozicon128.png ${TGTDIR}/usr/share/icons/firefox128.png 
mkdir -p ${TGTDIR}/opt/firefox-${PKGVERSION}/plugins
touch ${TGTDIR}/opt/firefox-${PKGVERSION}/plugins/.intentionally_empty

mkdir -p ${TGTDIR}/usr/bin
echo -n '' > ${TGTDIR}/usr/bin/firefox-${PKGVERSION}
cat >> ${TGTDIR}/usr/bin/firefox-${PKGVERSION} << FFRUN
#!/bin/sh

PATH=/static/bin:/static/sbin:\$PATH
export PATH

. /etc/rc.defaults
. /etc/rc.subr/extractbootparams

langopts=""
lc=\$( echo \$LC_ALL | awk -F '.' '{print \$1}' | sed 's/_/-/g' )
langopts="-contentLocale \${lc} -UILocale \${lc}"

[ "\$security" '!=' "smack" ] && exec /opt/firefox-${PKGVERSION}/firefox \$langopts \$@

if [ "\$#" -lt 1 ] ; then
    exec sudo /opt/firefox-${PKGVERSION}/firefox_smack
else
    if ps waux | grep 'surfer   /opt/.*/firefox-bin' | grep -v grep ; then
        /opt/firefox-${PKGVERSION}/firefox \$@
    else
        sudo /opt/firefox-${PKGVERSION}/firefox_smack &
	sleep 5
	exec /opt/firefox-${PKGVERSION}/firefox \$@
    fi
fi
FFRUN

rm ${TGTDIR}/usr/bin/firefox
# ln -sf /usr/bin/firefox-${PKGVERSION} ${TGTDIR}/usr/bin/firefox
chmod a+rx ${TGTDIR}/usr/bin/firefox-${PKGVERSION}

echo -n '' > ${TGTDIR}/opt/firefox-${PKGVERSION}/firefox_smack
cat >> ${TGTDIR}/opt/firefox-${PKGVERSION}/firefox_smack << FFSMACK
#!/static/bin/ash

langopts=""
lc=\$( echo \$LC_ALL | awk -F '.' '{print \$1}' | sed 's/_/-/g' )
langopts="-contentLocale \${lc} -UILocale \${lc}"

if [ -f /etc/lesslinux/banking/allowedservers.xml ] && [ -f /usr/bin/smack_bankrules.rb ] ; then
	timeout -t 5 /static/sbin/newsmack netmgr /usr/bin/ruby /usr/bin/smack_bankrules.rb
fi
/static/sbin/newsmack internet /static/bin/su surfer -c "/opt/firefox-${PKGVERSION}/firefox \$langopts"

FFSMACK

chmod a+rx ${TGTDIR}/opt/firefox-${PKGVERSION}/firefox_smack
/sbin/paxctl -m -r ${TGTDIR}/opt/firefox-${PKGVERSION}/firefox-bin
			
chown -R 0:0 ${TGTDIR}/opt/firefox-${PKGVERSION}

			
			]]>
		</install>
		<clean>
			 <![CDATA[
			rm -rf mozilla-release l10n
			]]>
		</clean>
	</package>
</llpackages>
