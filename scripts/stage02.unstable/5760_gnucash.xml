<llpackages>
	<package 
		name="gnucash"
		version="2.6.3"
		class="user">
		<license>GPLv2</license>
		<sources>
			<file>                                                                                            
				<pkg sha1="40ea9c069d0ad0a811b74f00c2b32faad6108a6a">gnucash-2.6.3.tar.bz2</pkg>
				<mirror>http://downloads.sourceforge.net/project/gnucash/gnucash%20%28stable%29/2.6.3/</mirror>
			</file>
			<manualcheck date="20140215" interval="180" page="http://sourceforge.net/projects/gnucash/files/gnucash%20%28stable%29/" />
			<check>
				<page html="http://sourceforge.net/projects/gnucash/files/gnucash%20%28stable%29/">
					<atext linktext="2.6.2" />
					<atext linktext="2.6.3" />
					<atext linktext="2.6.4" />
					<atext linktext="2.6.5" />
					<atext linktext="2.7." />
					<atext linktext="2.8." />
					<atext linktext="3.0." />
				</page>
			</check>
		</sources>
		<builddeps>
                        <dep>GConf</dep>
                        <dep>ORBit2</dep>
                        <dep>OpenSP</dep>
                        <dep>aqbanking</dep>
                        <dep>atk</dep>
                        <dep>bash</dep>
                        <dep>binutils</dep>
                        <dep>cairo</dep>
                        <dep>coreutils</dep>
                        <dep>dbus-glib</dep>
                        <dep>dbus</dep>
                        <dep>diffutils</dep>
                        <dep>enchant</dep>
                        <!-- <dep>enigmail</dep> -->
                        <dep>expat</dep>
                        <dep>fontconfig</dep>
                        <dep>freetype</dep>
                        <dep>gawk</dep>
                        <dep>gcc</dep>
                        <dep>gdk-pixbuf</dep>
                        <dep>gettext</dep>
                        <dep>glib</dep>
                        <dep>glibc</dep>
                        <dep>gmp</dep>
                        <dep>gnome-vfs</dep>
                        <dep>gnutls</dep>
                        <dep>goffice</dep>
                        <dep>grep</dep>
                        <dep>gst-plugins-base</dep>
                        <dep>gstreamer</dep>
                        <dep>gtk</dep>
                        <dep>guile</dep>
                        <dep>gwenhywfar</dep>
                        <dep>inetutils</dep>
                        <dep>intltool</dep>
                        <dep>jpegsrc</dep>
                        <dep>ktoblzcheck</dep>
			<dep>libICE</dep>
                        <dep>libSM</dep>
                        <dep>libX11</dep>
                        <dep>libXau</dep>
                        <dep>libXcomposite</dep>
                        <dep>libXcursor</dep>
                        <dep>libXdamage</dep>
                        <dep>libXdmcp</dep>
                        <dep>libXext</dep>
                        <dep>libXfixes</dep>
                        <dep>libXrandr</dep>
                        <dep>libXrender</dep>
                        <dep>libXt</dep>
                        <dep>libart_lgpl</dep>
                        <dep>libbonobo</dep>
                        <dep>libbonoboui</dep>
                        <dep>libcanberra</dep>
                        <dep>libdbi</dep>
                        <dep>libgcrypt</dep>
                        <dep>libglade</dep>
                        <dep>libgnome-keyring</dep>
                        <dep>libgnome</dep>
                        <dep>libgnomecanvas</dep>
                        <dep>libgnomeui</dep>
                        <dep>libgpg-error</dep>
                        <dep>libgsf</dep>
                        <dep>libofx</dep>
                        <dep>libogg</dep>
                        <dep>libpng14</dep><dep>libpng15</dep>
                        <dep>libpthread-stubs</dep>
                        <dep>libsoup</dep>
                        <dep>libtasn1</dep>
                        <dep>libtool</dep>
                        <dep>libvorbis</dep>
                        <dep>libxcb</dep>
                        <dep>libxml2</dep>
                        <dep>libxslt</dep>
                        <dep>linux_headers</dep>
                        <dep>make</dep>
                        <dep>p5-xml</dep>
                        <dep>pango</dep><dep>pangox-compat</dep>
                        <dep>perl</dep>
                        <dep>pixman</dep>
                        <dep>pkg-config</dep>
                        <dep>popt</dep>
                        <dep>sed</dep>
                        <dep>slib</dep>
                        <dep>sqlite</dep>
                        <dep>util-linux-ng</dep>
                        <dep>webkit</dep>
			<dep>gtkhtml</dep>
                        <dep>which</dep>
                        <dep>xproto-base</dep>
                        <dep>zlib</dep>
			<dep>distcc</dep>
			<dep>libdbi-drivers</dep>
                </builddeps>
		<unpack>
			<![CDATA[ 
			tar xjf ${SRCDIR}/${PKGNAME}-${PKGVERSION}.tar.bz2
			]]>
		</unpack>
		<build>
			<![CDATA[
			cd ${PKGNAME}-${PKGVERSION}
			export PKG_CONFIG_PATH=/usr/compat.old/lib/pkgconfig
			export PATH=$PATH:/usr/compat.old/bin:/usr/compat.old/sbin
			if [ -n "$DISTCC_POTENTIAL_HOSTS" ]  ; then
				jobcount=` expr $DISTCC_HOSTCOUNT '*' 3 `
				export CC="distcc gcc"
				export CXX="distcc g++"
			fi
			./configure --prefix=/opt --sysconfdir=/etc \
				--disable-deprecated-warning-flags \
				--enable-ofx --enable-aqbanking
			if [ -n "$DISTCC_POTENTIAL_HOSTS" ]  ; then
				pump make -j $jobcount
			else
				make
			fi
			]]>
		</build>
		<test />
		<install>
			<![CDATA[
			cd ${PKGNAME}-${PKGVERSION}
			export PKG_CONFIG_PATH=/usr/compat.old/lib/pkgconfig
			export PATH=$PATH:/usr/compat.old/bin:/usr/compat.old/sbin
			make install

[ -x /opt/bin/gnucash ] || exit 1
			
			( cd /usr/share/guile/slib ; ln -s mklibcat.scm mklibcat )
			guile -c "(use-modules (ice-9 slib)) (require 'new-catalog)"

/sbin/paxctl -m -r /opt/bin/gnucash

rm /opt/bin/gnucash_wrapper
cat >> /opt/bin/gnucash_wrapper << WRAPPER
#!/static/bin/ash

PATH=/static/bin:/static/sbin:\$PATH
export PATH

. /etc/rc.defaults
. /etc/rc.subr/extractbootparams

if [ "\$security" = smack ] ; then
	sudo /opt/bin/gnucash_smack
else
	exec "/opt/bin/gnucash"
fi

WRAPPER

rm /opt/bin/gnucash_smack
cat >> /opt/bin/gnucash_smack << SMACK
#!/static/bin/ash

PATH=/static/bin:/static/sbin:\$PATH
export PATH
LD_LIBRARY_PATH=/opt/lib
export LD_LIBRARY_PATH

. /etc/rc.defaults
. /etc/rc.subr/extractbootparams

case \$lang in 
    de)
	LANGUAGE=de_DE 
    ;;
    pl)
	LANGUAGE=pl_PL
    ;;
    es)
        LANGUAGE=es_ES
    ;;
    ru)
        LANGUAGE=ru_RU
    ;;
    *)
        LANGUAGE=en_US
    ;;
esac

export LANGUAGE

# Find the SMACK context we can run run gnucash in
if grep hbci /etc/smack/user ; then
	exec /static/sbin/newsmack hbci /static/bin/su surfer -c "/opt/bin/gnucash"
else
	exec /static/sbin/newsmack internet /static/bin/su surfer -c "/opt/bin/gnucash"
fi
SMACK

chmod 0755 /opt/bin/gnucash_wrapper
chmod 0755 /opt/bin/gnucash_smack

			]]>
		</install>
		<clean>
			<![CDATA[
			rm -rf ${PKGNAME}-${PKGVERSION}
			]]>
		</clean>
	</package>
</llpackages>
