<llpackages>
	<scripts>
	<scriptdata location="/etc/rc.d/0560-runtimeconf.sh" mode="0755" group="0" owner="0">
	<![CDATA[#!/static/bin/ash
		
#lesslinux provides runtimeconf
#lesslinux license BSD

PATH=/usr/bin:/usr/sbin:/bin:/sbin:/static/bin:/static/sbin
export PATH

. /etc/rc.defaults
. /etc/rc.subr/extractbootparams
. /etc/rc.subr/colors

XINITRC=/usr/local/xconfgui/xinitrc_runtimeconf

case $1 in 
    start)
	HOME=/root
	export HOME
	mkdir -p -m 0600 /root 
	printf "$bold===> Starting configuration interface $normal\n"
	if [ -n "$xvfb" ] ; then
	    touch /var/run/lesslinux/skip_monitortest
	elif echo "$skipservices" | grep '|monitortest|' ; then
	    touch /var/run/lesslinux/skip_monitortest
	elif fbset > /dev/null 2>&1 && cat /proc/cmdline | grep -qv ' vga=' && [ -z "$xvfb" ] ; then
	    touch /var/run/lesslinux/skip_monitortest
	    touch /var/run/lesslinux/xconfgui_xorg
	    touch /var/run/lesslinux/xconfgui_skip_monitor
	elif lspci -n | grep -iq '15ad:0405' && [ -z "$xvnc" ] ; then 
	    touch /var/run/lesslinux/skip_monitortest
	    touch /var/run/lesslinux/xconfgui_xorg
	    touch /var/run/lesslinux/xconfgui_skip_monitor
	    touch /var/run/lesslinux/vmware_detected
	fi
	
	# FIXME: Starting the Xserver twice is needed on some Ati cards with Kernel 3.10.5
	# This behaviour might be fixed with later kernel or firmware versions
	
	if [ -z "$xvfb" ] ; then
		scrn=""
		[ -n "$xorgscreen" ] && scrn="-screen $xorgscreen"
		/usr/bin/xinit /usr/bin/Esetroot /usr/local/xconfgui/testbild.png -- /usr/bin/Xorg -retro -nolisten tcp $scrn -br -dpi "$dpi"
		/usr/bin/xinit /usr/bin/Esetroot /usr/local/xconfgui/testbild.png -- /usr/bin/Xorg -retro -nolisten tcp $scrn -br -dpi "$dpi"
	fi
	
	if [ -f /var/run/lesslinux/skip_monitortest ] ; then
	    echo "===> Skipping monitor test"
	else
	    ## First start the monitor test with the normal Xorg server
	    ## If an alternative xorg.conf has been copied this is used 
	    ## The cheatcode for using a certain section in xorg.conf is 
	    ## already active
	    if [ -n "$xorgscreen" ] ; then
		/usr/bin/xinit /usr/local/xconfgui/monitortest -- /usr/bin/Xorg -retro -nolisten tcp -screen "$xorgscreen" -br -dpi "$dpi"
	    else
		/usr/bin/xinit /usr/local/xconfgui/monitortest -- /usr/bin/Xorg -retro -nolisten tcp -br -dpi "$dpi"
	    fi
	fi
	
	if [ -f /var/run/lesslinux/xorg_vars ] ; then
		. /var/run/lesslinux/xorg_vars
	fi

	# Remove an old indicator
	rm ${HOME}/.lesslinux/xsetroot_successful

	if [ -n "$xvfb" ] ; then
		# xvfb=WIDTHxHEIGHTxDEPTH
		/usr/bin/xinit "$XINITRC" -- /usr/bin/Xvfb :0 -retro -nolisten tcp -dpi "$dpi" -screen :0 "$xvfb"
		echo "$xvfb" >> /var/run/lesslinux/runtimeconf
	else
		# Determine if we have to use a screen section or not - do not use a screen section when KMS is detected
		if [ -c /dev/fb0 ] && cat /proc/cmdline | grep -qv ' vga=' ; then
			echo "kms" >> /var/run/lesslinux/runtimeconf
			# Use the framebuffer X server in this case, to make sure the right resolution is used
			/usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -nolisten tcp -br -dpi "$dpi"
			# /usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -config xorg.conf.fbdev -nolisten tcp -br -dpi "$dpi"
		elif [ -n "$xorgscreen" -a -f /etc/X11/xorg.conf ] ; then
			echo "screen section" >> /var/run/lesslinux/runtimeconf
			/usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -nolisten tcp -screen "$xorgscreen" -br -dpi "$dpi"
		else
			echo "try xorgconf" >> /var/run/lesslinux/runtimeconf
			/usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -nolisten tcp -br -dpi "$dpi"
		fi
		if [ '!' -f ${HOME}/.lesslinux/xsetroot_successful -a -f /etc/xinitrc.d/0000-xsetroot.sh ] ; then
			if [ -c /dev/fb0 ] ; then
				echo "framebuffer" >> /var/run/lesslinux/runtimeconf
				/usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -config xorg.conf.fbdev -nolisten tcp -br -dpi "$dpi"
			else
				echo "vesa" >> /var/run/lesslinux/runtimeconf
				/usr/bin/xinit "$XINITRC" -- /usr/bin/Xorg -config xorg.conf.vesa -nolisten tcp -br -dpi "$dpi"
			fi
		fi
	fi
	
	# FIXME! Move blobsearch to a separate function
	# FIXME! Newer files should win!
	if [ -d "/lesslinux/cryptpart/${contdir}/blob" ] ; then
		mkdir -p /lesslinux/blob
		find "/lesslinux/cryptpart/${contdir}/blob" -maxdepth 1 | while read fname ; do
			[ -f "$fname" -o -d "$fname" ] && \
				ln -sf "$fname" /lesslinux/blob/` basename "$fname" ` 
		done
	fi
    ;;
esac

# The end	]]>
	</scriptdata>
	</scripts>  
	<package name="xconfgui" version="20140726-01" allowfail="yes">
		<sources>
			<file>                                                                                          
				<pkg sha1="55d8f647f4aca365679f18ed9cc354812454152d">xconfgui-20140726-01.tar.bz2</pkg>
				<mirror>http://distfiles.lesslinux.org/</mirror>
			</file>
		</sources>
		<unpack>
		<![CDATA[ 
		tar xjf ${SRCDIR}/${PKGNAME}-${PKGVERSION}.tar.bz2
		]]>
		</unpack>
		<install>
		<![CDATA[ 
		cd ${PKGNAME} 
		mkdir -m 0755 -p ${SQUASHFS}/usr/local/xconfgui
		# ignore 5in1install.rb 5in1windows.rb - those are proprietary COBI
		for i in configtest conftest.rb  \
		    installer.rb monitortest monitortest.rb \
		    runtimeconf.rb trigger_configtest \
		    xinitrc xinitrc_installer \
		    xinitrc_runtimeconf ; do
			install -m 0755 $i ${SQUASHFS}/usr/local/xconfgui
		done
		for i in testbild.png ; do
			install -m 0644 $i ${SQUASHFS}/usr/local/xconfgui
		done 
		mkdir ${SQUASHFS}/usr/var/
		]]>
		</install>
	</package>
	
</llpackages>